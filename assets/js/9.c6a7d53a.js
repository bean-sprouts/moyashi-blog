(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{440:function(t,s,a){"use strict";a.r(s);var n=a(48),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"新技术学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新技术学习"}},[t._v("#")]),t._v(" 新技术学习")]),t._v(" "),a("h2",{attrs:{id:"keycloak"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keycloak"}},[t._v("#")]),t._v(" Keycloak")]),t._v(" "),a("p",[t._v("一套认证授权系统管理解决方案，")]),t._v(" "),a("h2",{attrs:{id:"typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" Typescript")]),t._v(" "),a("p",[t._v("JavaScript的超集，一门静态类型、弱类型的语言，是添加了类型系统的JavaScript。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("定义变量时未指定类型，定义时有赋值会推断为赋值的类型，定义时未赋值会推断为any")])]),t._v(" "),a("li",[a("p",[t._v("接口用于定义对象的类型，也用于对对象形状的描述，"),a("code",[t._v("[propName: string]: any")]),t._v("用于允许有任意的属性")])]),t._v(" "),a("li",[a("p",[t._v("联合类型"),a("code",[t._v("|")])])]),t._v(" "),a("li",[a("p",[t._v("只读类型使用"),a("code",[t._v("readonly")]),t._v("关键字，"),a("code",[t._v("readonly id: string")]),t._v("，只能在定义时给该属性赋值")])]),t._v(" "),a("li",[a("p",[t._v("数组，"),a("code",[t._v("number[]")]),t._v("或者"),a("code",[t._v("Array<number>")]),t._v("或者使用接口")])]),t._v(" "),a("li",[a("p",[t._v("对于类数组需要使用接口，typescript内置了常用的 "),a("code",[t._v("IArguments")]),t._v(", "),a("code",[t._v("NodeList")]),t._v(", "),a("code",[t._v("HTMLCollection")]),t._v(" 等")])]),t._v(" "),a("li",[a("p",[t._v("函数，"),a("code",[t._v("function sum(x: number, y: number): number { return x + y; }")]),t._v("，对于函数表达式，需要使用"),a("code",[t._v("=>")]),t._v("来定义，`let sum: (x: number, y: number) => number =  function(x: number, y: number): number { return x + y }")])]),t._v(" "),a("li",[a("p",[t._v("可选参数，"),a("code",[t._v("function sum(x: number, y?:number)")]),t._v("，可选参数后不允许出现必需参数")])]),t._v(" "),a("li",[a("p",[t._v("设置了默认值的参数识别为可选参数，但是不受可选参数后不能接必需参数的限制")])]),t._v(" "),a("li",[a("p",[t._v("重载，通过多次声明函数，实现对输入不同类型就输出指定类型的定义")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resvese")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("类型断言，"),a("code",[t._v("值 as 类型")]),t._v("，常用于将联合类型断言为其中一个类型，避免访问其中一个类型的特定属性/方法时报错，要避免断言后调用方法或者引用深层属性的情况；也用于将父类断言为具体的子类，避免访问子类特有的属性时报错。")])]),t._v(" "),a("li",[a("p",[t._v("内置对象，"),a("code",[t._v("Boolean")]),t._v("、"),a("code",[t._v("Error")]),t._v("、"),a("code",[t._v("Date")]),t._v("、"),a("code",[t._v("RegExp")]),t._v(" 等，"),a("code",[t._v("Document")]),t._v("、"),a("code",[t._v("HTMLElement")]),t._v("、"),a("code",[t._v("Event")]),t._v("、"),a("code",[t._v("NodeList")]),t._v(" 等。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("type Name = string | number")]),t._v("，类型别名，常用于联合类型")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("type EventNames = 'click' | 'scrol'")]),t._v("，字符串字面量类型")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("let tom: [string, number] = ['tom', 23]")]),t._v("，元组，不同类型的对象的集合")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("enum Days {Yestoday, Today, Tomorrow};")]),t._v("，取值被限定范围，Days['Yestoday'] === 0，Days[0] === 'Yestoday'")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);