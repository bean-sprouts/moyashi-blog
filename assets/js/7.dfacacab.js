(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{373:function(t,v,a){"use strict";a.r(v);var _=a(45),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"owl架构设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#owl架构设计"}},[t._v("#")]),t._v(" OWL架构设计")]),t._v(" "),a("h2",{attrs:{id:"架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构图"}},[t._v("#")]),t._v(" 架构图")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://route-chenz.tpddns.cn:8680/s/js46XxszF5YQQdf/preview",alt:"OWL前端架构图"}})]),t._v(" "),a("h2",{attrs:{id:"技术架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术架构"}},[t._v("#")]),t._v(" 技术架构")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/"}},[t._v("Home")])],1),t._v(" "),a("h3",{attrs:{id:"页面层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面层"}},[t._v("#")]),t._v(" 页面层")]),t._v(" "),a("p",[t._v("整个项目由若干个页面构成")]),t._v(" "),a("h3",{attrs:{id:"业务层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务层"}},[t._v("#")]),t._v(" 业务层")]),t._v(" "),a("ul",[a("li",[t._v("Layout，负责页面整体布局")]),t._v(" "),a("li",[t._v("各页面组合和公共组件搭建出一个页面")]),t._v(" "),a("li",[t._v("Vue Router，处理页面之间的关系")]),t._v(" "),a("li",[t._v("Vuex + LocalStorage，管理页面数据")]),t._v(" "),a("li",[t._v("util，项目通用的各种工具")]),t._v(" "),a("li",[t._v("Ant-Design-Vue，UI组件库")])]),t._v(" "),a("h3",{attrs:{id:"网络层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[t._v("#")]),t._v(" 网络层")]),t._v(" "),a("ul",[a("li",[t._v("封装"),a("code",[t._v("Axios")]),t._v("，通过统一的请求接口实现请求、相应、错误的统一处理。")]),t._v(" "),a("li",[t._v("本地开发基于mock，通过预先跟服务器端约定好的接口，模拟请求数据甚至逻辑，能够让前端开发独立自主，不会被服务端的开发进程所阻塞。")]),t._v(" "),a("li",[t._v("开发完成后接入正式"),a("code",[t._v("API")]),t._v("接口")])]),t._v(" "),a("h3",{attrs:{id:"构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[t._v("#")]),t._v(" 构建")]),t._v(" "),a("ul",[a("li",[t._v("Vite，一种新型前端构建工具，能够显著提升前端开发体验。")]),t._v(" "),a("li",[t._v("LESS，css预处理语言，像写编程语言一样写css。")]),t._v(" "),a("li",[t._v("TypeScript，添加了类型系统的javascript，提高代码可维护性。")]),t._v(" "),a("li",[t._v("ESLint，代码格式检测工具，避免代码错误和统一代码风格。")])]),t._v(" "),a("h3",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),a("ul",[a("li",[t._v("单元测试，测试软件的最小单元：函数、类，开发人员负责。")]),t._v(" "),a("li",[t._v("集成测试，测试单元模块之间的接口，开发人员负责。")]),t._v(" "),a("li",[t._v("系统测试，针对业务功能、业务流程进行的测试。包括:\n"),a("ul",[a("li",[t._v("冒烟测试，目的是确认软件基本功能正常，可以进行后续的正式测试工作。")]),t._v(" "),a("li",[t._v("回归测试，修改了旧的代码后，重新测试功能是否正确，有没有引入新的错误或导致其它代码产生错误。")])])]),t._v(" "),a("li",[t._v("验收测试，是针对用户需求、业务流程进行的正式的测试，以确定系统是否满足验收标准，由用户、客户或其他授权机构决定是否接受系统。")])]),t._v(" "),a("h3",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),a("ul",[a("li",[t._v("手动部署，手动将打包后的静态文件上传到服务器实现部署。")]),t._v(" "),a("li",[t._v("自动化部署，利用"),a("code",[t._v("jenkins")]),t._v("创建Pipeline实现CI/CD（持续集成/交付/部署）。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);